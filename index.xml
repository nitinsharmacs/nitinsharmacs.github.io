<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>bitPhile</title>
      <link>https://nitinsharmacs.github.io</link>
      <description>Last 10 notes on bitPhile</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>storage-in-statefulsets</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/storage-in-statefulsets</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/storage-in-statefulsets</guid>
    <description>Storage in StatefulSets Persistent volume claim can be used for storage in StatefulSets.</description>
    <pubDate>Wed, 07 May 2025 18:26:00 GMT</pubDate>
  </item><item>
    <title>headless-service</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/headless-service</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/headless-service</guid>
    <description>Headless Service A headless service is a service with ClusterIP set to None.</description>
    <pubDate>Tue, 06 May 2025 16:43:00 GMT</pubDate>
  </item><item>
    <title>statefulsets</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/statefulsets</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/statefulsets</guid>
    <description>StatefulSets StatefulSets are similar to Deployment with features like Ordered creation and deletion of pods Unique network identity and name and other features.</description>
    <pubDate>Tue, 06 May 2025 05:24:00 GMT</pubDate>
  </item><item>
    <title>storage-provisioning</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/storage-provisioning</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/storage-provisioning</guid>
    <description>Storage Provisioning There can be two types of provisioning, static dynamic Static where we create pv and setup all the volume configurations such as which volume implementation to use (volume plugin) etc, manually.</description>
    <pubDate>Thu, 24 Apr 2025 06:55:00 GMT</pubDate>
  </item><item>
    <title>storage-class</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/storage-class</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/storage-class</guid>
    <description>StorageClass StorageClass provides a way to assign persistent volume to any persistent volume claim dynamically.</description>
    <pubDate>Wed, 23 Apr 2025 18:54:00 GMT</pubDate>
  </item><item>
    <title>volume-access-modes</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/sandbox/volume-access-modes</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/sandbox/volume-access-modes</guid>
    <description>Testing volume access modes ReadWriteMany Pods on different nodes can write simultaneously.</description>
    <pubDate>Tue, 22 Apr 2025 07:27:00 GMT</pubDate>
  </item><item>
    <title>pv-access-modes</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/pv-access-modes</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/pv-access-modes</guid>
    <description>Access Modes There are different type of access modes: ReadWriteOnce ReadOnlyMany ReadWriteMany Resources kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes .</description>
    <pubDate>Mon, 21 Apr 2025 18:50:00 GMT</pubDate>
  </item><item>
    <title>persistent-volume-claim</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/persistent-volume-claim</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/persistent-volume-claim</guid>
    <description>Persistent Volume Claim Persistent Volume claim is a request made for persistent volume. It consumes the storage provided by persistent volume.</description>
    <pubDate>Mon, 21 Apr 2025 18:37:00 GMT</pubDate>
  </item><item>
    <title>persistent-volume</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/persistent-volume</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/persistent-volume</guid>
    <description>Persistent Volume Persistent volume is an independent storage resource with its own life cycle in kubernetes.</description>
    <pubDate>Mon, 21 Apr 2025 18:29:00 GMT</pubDate>
  </item><item>
    <title>volumes</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/volumes</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/volumes</guid>
    <description>Volumes Similar to docker volumes, containers inside pod in kubernetes can also have volumes in specification.</description>
    <pubDate>Mon, 21 Apr 2025 06:36:00 GMT</pubDate>
  </item>
    </channel>
  </rss>