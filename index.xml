<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>bitPhile</title>
      <link>https://nitinsharmacs.github.io</link>
      <description>Last 10 notes on bitPhile</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>init-containers</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/init-containers</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/init-containers</guid>
    <description>Init Containers Init containers are used to run containers in the beginning of pod starting. These containers get finished and then actual containers get started.</description>
    <pubDate>Sun, 06 Apr 2025 18:26:00 GMT</pubDate>
  </item><item>
    <title>node-affinity</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/node-affinity</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/node-affinity</guid>
    <description>Node Affinity Node affinity provides advance functionality to place pods on nodes selectively. We can provide quite complicated conditions to decide where the pod can be scheduled.</description>
    <pubDate>Thu, 03 Apr 2025 18:47:00 GMT</pubDate>
  </item><item>
    <title>node-selectors</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/node-selectors</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/node-selectors</guid>
    <description>Node Selectors Node selectors are used assign pods to specific nodes. Pods are assigned by selecting the nodes using labels. apiVersion: v1 kind: Pod metadata: name: nginx spec: containers: - name: nginx image: nginx nodeSelector: - type: powerful With this, pod can be assigned to any node with label type=powerful.</description>
    <pubDate>Thu, 03 Apr 2025 16:08:00 GMT</pubDate>
  </item><item>
    <title>taints-tolerances</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/taints-tolerances</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/taints-tolerances</guid>
    <description>Taints and Tolerances Default Scheduler assigns pods to the available nodes with ample resources. However, we can restrict what pods can be assigned to what nodes using taints.</description>
    <pubDate>Thu, 03 Apr 2025 15:41:00 GMT</pubDate>
  </item><item>
    <title>limit-range</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/limit-range</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/limit-range</guid>
    <description>Limit Range Limit range defines the default and limit resource values for cpu and memory for a namespace. cpu-limit-range.yaml apiVersion: v1 kind: LimitRange metadata: name: cpu-limit-range namespace: learning spec: limits: - default: cpu: 500m defaultRequest: cpu: 200m min: cpu: 100m max: cpu: &quot;1&quot; type: Container We can specify same for memory also.</description>
    <pubDate>Wed, 02 Apr 2025 12:25:00 GMT</pubDate>
  </item><item>
    <title>service-accounts</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/service-accounts</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/service-accounts</guid>
    <description>Service Accounts Service accounts are used to access kubernetes services through APIs by other software programs. For example, a prometheus service to watch the resources matrices etc.</description>
    <pubDate>Sun, 30 Mar 2025 16:30:00 GMT</pubDate>
  </item><item>
    <title>security-contexts</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/security-contexts</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/security-contexts</guid>
    <description>Security Contexts For some background, containers share the host kernel but they run in their namespace managed by docker. Containers can have same user as host and they have root users also.</description>
    <pubDate>Thu, 27 Mar 2025 18:21:00 GMT</pubDate>
  </item><item>
    <title>at-rest-encryption</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/at-rest-encryption</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/at-rest-encryption</guid>
    <description>Encryption at REST-API Kubernetes stores key value pair data inside etcd in plain text format which can be easily comprehended by anyone who has access to to it ...</description>
    <pubDate>Thu, 27 Mar 2025 05:44:00 GMT</pubDate>
  </item><item>
    <title>secrets</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/secrets</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/secrets</guid>
    <description>Secrets Secrets are similar to ConfigMaps which stores confidential data. These are used to pass passwords, keys, etc to the pods. Create Secrets Secrets can be created using imperative (command) and using resource yam file.</description>
    <pubDate>Mon, 24 Mar 2025 15:31:00 GMT</pubDate>
  </item><item>
    <title>config-maps</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/config-maps</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/config-maps</guid>
    <description>ConfigMap ConfigMap stores key value pair configurations. Creating ConfigMap A ConfigMap can be created using imperative command and in a declarative way using resource yaml file.</description>
    <pubDate>Fri, 21 Mar 2025 12:08:00 GMT</pubDate>
  </item>
    </channel>
  </rss>