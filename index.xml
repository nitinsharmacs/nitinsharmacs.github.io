<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>bitPhile</title>
      <link>https://nitinsharmacs.github.io</link>
      <description>Last 10 notes on bitPhile</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>loading-unloading-packages</title>
    <link>https://nitinsharmacs.github.io/notes/tech/spack/loading-unloading-packages</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/spack/loading-unloading-packages</guid>
    <description>Loading/Unloading Spack Packages Spack load command is used to load packages. It changes the PATH variable so that package executables becomes available.</description>
    <pubDate>Wed, 12 Mar 2025 07:23:00 GMT</pubDate>
  </item><item>
    <title>dependencies-graph</title>
    <link>https://nitinsharmacs.github.io/notes/tech/spack/dependencies-graph</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/spack/dependencies-graph</guid>
    <description>spack graph graph command gives the graphical representation of package dependencies. spack graph mysql To create pdf of graph, we can use spack graph --dot mysql | dot -Tpdf &gt; dependencies.pdf .</description>
    <pubDate>Tue, 11 Mar 2025 13:32:00 GMT</pubDate>
  </item><item>
    <title>find-command</title>
    <link>https://nitinsharmacs.github.io/notes/tech/spack/find-command</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/spack/find-command</guid>
    <description>spack find find command is used to find the specified package. It can take options like -l for showing hashes for the package and its dependencies, -f for showing the compiler being used to compile the package and its dependencies.</description>
    <pubDate>Tue, 11 Mar 2025 13:15:00 GMT</pubDate>
  </item><item>
    <title>deployments</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/deployments</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/deployments</guid>
    <description>Deployments Deployment make sure that the pods are updated without hampering the access to the services. It makes the updates like rolling updates and rollbacks to previous version seamless as all the pods in deployments are not updated all at once.</description>
    <pubDate>Tue, 25 Feb 2025 17:12:00 GMT</pubDate>
  </item><item>
    <title>replicaset</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/replicaset</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/replicaset</guid>
    <description>ReplicaSet Replicaset is same as ReplicationController and came after it. The only different is the spec.selector section and it recreates the already existing pods if they get terminated.</description>
    <pubDate>Mon, 24 Feb 2025 11:10:00 GMT</pubDate>
  </item><item>
    <title>replication-controller</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/replication-controller</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/replication-controller</guid>
    <description>Replication Controller This is the old technology used in kubernetes that is replaced with Replica Set. It is used to make sure that specified number of pods are running for an application.</description>
    <pubDate>Mon, 24 Feb 2025 06:50:00 GMT</pubDate>
  </item><item>
    <title>useful-commands</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/useful-commands</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/useful-commands</guid>
    <description>Useful Kubernetes commands CommandDescriptionkubectl edit pod &lt;podname&gt;Opens up the yml file of the pod to edit.</description>
    <pubDate>Sun, 23 Feb 2025 17:22:00 GMT</pubDate>
  </item><item>
    <title>yml-file</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/yml-file</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/yml-file</guid>
    <description>YML File YML file is used to define any object in kubernetes. It has following basic and mandatory fields. apiVersion: v1 kind: Pod metadata: name: mypod labels: type: frontend spec: containers: - name: nginx-container image: nginx apiVersion tells which api version to use for a particular resource.</description>
    <pubDate>Sun, 23 Feb 2025 13:11:00 GMT</pubDate>
  </item><item>
    <title>architectural-components</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/architectural-components</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/architectural-components</guid>
    <description>Kubernetes Architecture Kubernetes architecture comprises following components. Sr.ComponentDescription1.API serverIt acts as a frontend to kubernetes cluster.All the cli commands talk to kubernetes using this API server.2.etcdIt is a distributed key-value database to store the nodes information required to manage the cluster.It is responsible for implementing the locks to make sure there are no conflicts between the masters.</description>
    <pubDate>Fri, 21 Feb 2025 06:26:00 GMT</pubDate>
  </item><item>
    <title>master-vs-worker-nodes</title>
    <link>https://nitinsharmacs.github.io/notes/tech/kubernetes/master-vs-worker-nodes</link>
    <guid>https://nitinsharmacs.github.io/notes/tech/kubernetes/master-vs-worker-nodes</guid>
    <description>Master Vs Worker nodes Master nodes has following components: kube-apiserver: it talks to kubelet on worker nodes to manage them. etcd: it is key-value pair storage which stores nodes information and other information.</description>
    <pubDate>Fri, 21 Feb 2025 06:22:00 GMT</pubDate>
  </item>
    </channel>
  </rss>